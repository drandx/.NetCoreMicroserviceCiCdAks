parameters:  
  stageName: 'Build_WebJobs'
  pathPrefix: 'Webjobs'
  dependsOn: []
  webjobTypes: ['Continuous','Triggered']

stages:

- stage: ${{ parameters.stageName }}
  dependsOn: ${{ parameters.dependsOn }}  
  jobs:
  - job: Build_WebJob
    strategy:
      maxParallel: 2
      matrix: 
        debug:
          BuildConfiguration: debug
        #release:
        #  BuildConfiguration: release

    steps:
        - script: echo building webjobs...
        
        - ${{ each webjobType in parameters.webjobTypes }}:
            #- task: DotNetCoreCLI@2
            #  inputs:
            #    command: 'restore'
            #    projects: '**/WebJobs/${{ webjobType }}/**/*.csproj'
            #  displayName: 'Restore Nuget Packages'

            #- task: DotNetCoreCLI@2
            #  inputs:
            #    command: 'build'
            #    projects: '**/WebJobs/${{ webjobType }}/**/*.csproj'
            #    arguments: '--no-restore'
            #  displayName: 'Build projects'

            #- task: DotNetCoreCLI@2
            #  inputs:
            #    command: 'test'
            #    projects: '**/WebJobs/${{ webjobType }}/**/*.csproj'
            #    arguments: '--no-restore'
            #  displayName: 'Run Tests'

            - task: DotNetCoreCLI@2
              displayName: 'DotNetCoreCLI publish ${{ webjobType }}'
              inputs:
                command: 'publish'
                publishWebProjects: false
                projects: '**/WebJobs/${{ webjobType }}/**/*.csproj'
                arguments: '-o $(Build.ArtifactStagingDirectory)/${{ webjobType }}'
                zipAfterPublish: false
                modifyOutputPath: true

            - task: PowerShell@2
              displayName: 'Create folder structure for ${{ webjobType }}'
              inputs:
                targetType: 'inline'
                workingDirectory: $(Build.ArtifactStagingDirectory)
                script: |
                     $folders = Get-ChildItem -Path .\${{ webjobType }} -dir -ErrorAction SilentlyContinue | Select-Object Name
                     foreach ($folder in $folders) {
                     $folderName = $folder.Name
                     New-Item -Path .\WebJobs\$folderName\App_Data\jobs\${{ webjobType }} -ItemType Directory -Force
                     Move-Item -Path .\${{ webjobType }}\$folderName -Destination .\WebJobs\$folderName\App_Data\jobs\${{ webjobType }}\ -Force }

        - task: PowerShell@2
          displayName: 'Archive all WebJobs'
          inputs:
            targetType: 'inline'
            workingDirectory: $(Build.ArtifactStagingDirectory)/WebJobs
            script: |
                $folders = Get-ChildItem -dir -ErrorAction SilentlyContinue | Select-Object Name
                foreach ($folder in $folders) {
                $folderName = $folder.Name
                Compress-Archive -Path .\$folderName\* -DestinationPath .\$folderName.zip}

        - task: PublishBuildArtifacts@1
          displayName: Publish Artifacts
          inputs:
            PathtoPublish: $(Build.ArtifactStagingDirectory)
            ArtifactName: $(Build.BuildNumber)
            ArtifactType: Container