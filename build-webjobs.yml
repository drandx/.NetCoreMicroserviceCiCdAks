parameters:  
  stageName: 'Build_WebJobs'
  pathPrefix: 'Webjobs'
  dependsOn: []

stages:

- stage: ${{ parameters.stageName }}
  dependsOn: ${{ parameters.dependsOn }}  
  jobs:
  - job: Build_WebJob
    strategy:
      maxParallel: 2
      matrix: 
        debug:
          BuildConfiguration: debug
        #release:
        #  BuildConfiguration: release

    steps:
        - script: echo building webjobs...
        
        - task: DotNetCoreCLI@2
          displayName: 'DotNetCoreCLI publish Continuous'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/WebJobs/Continuous/**/*.csproj'
            arguments: '-o $(Build.ArtifactStagingDirectory)/Continous'
            zipAfterPublish: false
            modifyOutputPath: true

        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            workingDirectory: $(Build.ArtifactStagingDirectory)
            script: |
                 $folders = Get-ChildItem -Path .\Continous -dir -ErrorAction SilentlyContinue | Select-Object Name
                 foreach ($folder in $folders) {
                 $folderName = $folder.Name
                 New-Item -Path .\WebJobs\publishing_output\$folderName\App_Data\jobs\continuous -ItemType Directory -Force
                 Move-Item -Path .\Continous\$folderName -Destination .\WebJobs\publishing_output\$folderName\App_Data\jobs\continuous\ -Force }

        - task: DotNetCoreCLI@2
          displayName: 'DotNetCoreCLI publish Trigger'
          inputs:
            command: 'publish'
            publishWebProjects: false
            projects: '**/WebJobs/Trigger/**/*.csproj'
            arguments: '-o $(Build.ArtifactStagingDirectory)/Trigger'
            zipAfterPublish: false
            modifyOutputPath: true
        
        - task: PowerShell@2
          inputs:
            targetType: 'inline'
            workingDirectory: $(Build.ArtifactStagingDirectory)
            script: |
                 $folders = Get-ChildItem -Path .\Trigger -dir -ErrorAction SilentlyContinue | Select-Object Name
                 foreach ($folder in $folders) {
                 $folderName = $folder.Name
                 New-Item -Path .\WebJobs\publishing_output\$folderName\App_Data\jobs\trigger -ItemType Directory -Force
                 Move-Item -Path .\Trigger\$folderName -Destination .\WebJobs\publishing_output\$folderName\App_Data\jobs\trigger\ -Force }

        - task: PublishBuildArtifacts@1
          displayName: Publish Artifacts
          inputs:
            PathtoPublish: $(Build.ArtifactStagingDirectory)
            ArtifactName: $(Build.BuildNumber)
            ArtifactType: Container